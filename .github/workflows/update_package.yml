name: Update package

on:
  workflow_dispatch:
  schedule:
    # Runs Wednesdays at a weird time (22:21 UTC) to avoid delays during
    # periods of high loads of GitHub Actions workflow runs.
    - cron: '4 22 * * 3'

jobs:
  update:
    runs-on: windows-2022
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install python dependency 'requests'
        run: pip install requests
      - name: Set git up
        run: |
          git config user.email 'vm-packages@mandiant.com'
          git config user.name 'vm-packages'
      - name: Update packages
        run: |
          $root = pwd
          New-Item test_logs -itemType Directory | Out-Null
          foreach ($packagePath in (Get-ChildItem packages)){
            $package = $packagePath.Name
            $version = python scripts\utils\update_package.py $package
            $updated = $?
            echo "$package $version"
            if ($updated -and $version) {
              # Test package before committing
              scripts\test\test_install.ps1 $package *>> "test_logs/$package.txt"
              $tested = $?
              cd $root
              if ($tested) {
                git add "packages/$package/"
                git commit -m "Update $package to $version"
              } else {
                echo "$package $version FAILED"
              }
            }
            # Clean changes and built packages
            git restore .
            Remove-Item built_pkgs -Recurse -ErrorAction Ignore
          }
          Exit(0)
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          title: ':robot: Package update'
          body: 'Automated package update'
          branch: package-update
          author: vm-packages <vm-packages@mandiant.com>
          add-paths: packages/*
          # GH actions can not trigger other GH actions,
          # use a Personal Access Token to trigger the CI workflow in the created PR
          token: ${{ secrets.REPO_TOKEN }}
      - name: Upload test output to assets
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test_logs
          path: test_logs/

